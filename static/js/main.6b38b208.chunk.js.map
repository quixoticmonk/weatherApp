{"version":3,"sources":["Form.js","Title.js","Toggletemp.js","Weather.js","App.js","index.js"],"names":["Form","props","onSubmit","getWeather","type","name","placeholder","Title","className","Toggletemp","checked","onlabel","offlabel","onChange","setUnits","onstyle","size","Weather","city","country","temperature","toFixed","humidity","description","error","API_KEY","UNITS","App","state","undefined","e","setState","console","log","a","async","preventDefault","target","elements","value","fetch","api_call","json","data","main","temp","sys","weather","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b38b208.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./App.css\"\r\n\r\n\r\nconst Form = (props) =>{\r\n    return (\r\n        <form onSubmit={props.getWeather}>\r\n            <input type='text' name = \"city\" placeholder=\"City...\"/>\r\n            <input type='text' name = \"country\" placeholder=\"Country...\"/>\r\n            <button>Get Weather </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n\r\n","import React from 'react'\r\n\r\nconst Title = () => {\r\n    return (\r\n        <div >\r\n            <h1 className=\"title-container__title\">Weather App</h1>\r\n            <h3 className=\"title-container__subtitle\">Get the weather details for your location</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title","import React from 'react'\r\nimport BootstrapSwitchButton from 'bootstrap-switch-button-react'\r\n\r\nconst Toggletemp=(props) => {\r\n        return (\r\n                <BootstrapSwitchButton\r\n                        checked={false}\r\n                        onlabel='F'\r\n                        offlabel='C'\r\n                        onChange={props.setUnits}\r\n                        onstyle=\"warning\"\r\n                        size='lg'\r\n                        />\r\n        )\r\n}\r\n\r\nexport default Toggletemp\r\n\r\n","import React from 'react'\r\nimport Toggletemp from './Toggletemp'\r\n\r\nconst Weather =(props) =>{\r\n    return(\r\n        <div className=\"weather__info\">\r\n            {\r\n                 props.city && props.country && <p className=\"weather__key\">Location :\r\n                     <span className=\"weather__value\">{props.city},{props.country}</span>\r\n                     </p>\r\n            }\r\n            {\r\n                props.temperature && <p className=\"weather__key\">Temperature :\r\n                    <span className=\"weather__value\">{props.temperature.toFixed(2)} \r\n                    <Toggletemp setUnits={props.setUnits}/>\r\n                    </span>\r\n                    </p>\r\n            }\r\n            \r\n            {\r\n                props.humidity && <p className=\"weather__key\">Humidity :\r\n                    <span className=\"weather__value\">{props.humidity}</span>\r\n                    </p>\r\n            }\r\n            {\r\n                props.description && <p className=\"weather__key\">Condition :\r\n                    <span className=\"weather__value\">{props.description}</span>\r\n                    </p>\r\n            }\r\n            {\r\n                props.error && <p className=\"weather__error\">\r\n                    {props.error}\r\n                    </p>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Weather;\r\n\r\n//props.setUnits","\nimport React, { Component } from 'react'\nimport './App.css';\nimport Form from './Form'\nimport Title from './Title';\nimport Weather from \"./Weather\"\n\n\nconst API_KEY =\"93a689cd023f38d34187fc62795caedd\";//TODO\nvar UNITS = 'metric'\n\nclass App extends Component {\n\n  state={\n    temperature:undefined,\n    humidity:undefined,\n    city:undefined,\n    country:undefined,\n    description:undefined,\n    error:undefined\n  }\n\n  setUnits = (e)=> {\n    UNITS = UNITS==='metric'?'imperial':'metric';\n    if(UNITS==='imperial'){\n      this.setState({\n          temperature:9/5*this.state.temperature + 32,\n          humidity:this.state.humidity,\n          city:this.state.city,\n          country:this.state.country,\n          description:this.state.description,\n          error:\"\"\n        }\n      )\n    }\n    else{\n      this.setState({\n        temperature:5/9*(this.state.temperature-32),\n        humidity:this.state.humidity,\n        city:this.state.city,\n        country:this.state.country,\n        description:this.state.description,\n        error:\"\"\n      }\n    )\n    }\n    console.log(this.state.temperature)\n    console.log('here')\n  }\n\n\n  getWeather= async(e)=>  {\n    e.preventDefault()\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=${UNITS}`)\n    const data = await api_call.json()\n    \n    if(city && country){\n      this.setState({\n        temperature:data.main.temp,\n        humidity:data.main.humidity,\n        city:data.name,\n        country:data.sys.country,\n        description:data.weather[0].description,\n        error:\"\"\n      })\n    }\n    else{\n      this.setState({\n        temperature:undefined,\n        humidity:undefined,\n        city:undefined,\n        country:undefined,\n        description:undefined,\n        error:\"Please enter the location details\"\n      })\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"wrapper\">\n          <div className=\"main\">\n            <div className=\"container\">\n              <div className=\"row\"></div>\n                <div className=\"col-xs-5 title-container\">\n                  <Title/>\n                </div>\n                <div className=\"col-xs-7 form-container\">\n                      <Form getWeather={this.getWeather} />\n                      <Weather \n                      temperature={this.state.temperature}\n                      city={this.state.city} \n                      country={this.state.country} \n                      humidity={this.state.humidity} \n                      description={this.state.description} \n                      error={this.state.error} \n                      setUnits={this.setUnits}\n                      />\n                  </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}